# Generated by Django 5.1.4 on 2025-06-13 19:16

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FinancialReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('company_name', models.CharField(max_length=255)),
                ('report_date', models.DateField()),
                ('structured_data', models.JSONField()),
                ('source_url', models.URLField(max_length=1000, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Annual Financial Report',
                'verbose_name_plural': 'Annual Financial Reports',
                'ordering': ['-report_date', 'company_name'],
            },
        ),
        migrations.CreateModel(
            name='ImportantAnnouncement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('company_name', models.CharField(db_index=True, max_length=500)),
                ('link', models.URLField(db_index=True, max_length=1000, unique=True)),
                ('category', models.CharField(max_length=500)),
                ('description', models.TextField()),
                ('publication_date_str', models.CharField(max_length=100)),
                ('priority', models.IntegerField(db_index=True, default=99)),
                ('scraped_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-scraped_at'],
            },
        ),
        migrations.CreateModel(
            name='NewsArticle',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('headline', models.CharField(max_length=1000)),
                ('link', models.URLField(db_index=True, max_length=1000, unique=True)),
                ('source', models.CharField(default='CNBCTV18', max_length=100)),
                ('publication_time_str', models.CharField(blank=True, max_length=50)),
                ('full_text', models.TextField()),
                ('sentiment', models.CharField(default='Neutral', max_length=10)),
                ('confidence', models.FloatField(default=0.0)),
                ('action', models.CharField(default='Hold', max_length=10)),
                ('is_stocks_to_watch', models.BooleanField(default=False)),
                ('scraped_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='QuarterlyFinancials',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('symbol', models.CharField(db_index=True, max_length=50)),
                ('company_name', models.CharField(max_length=255)),
                ('period_end_date', models.DateField(db_index=True)),
                ('structured_data', models.JSONField()),
                ('source_url', models.URLField(max_length=1000, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Quarterly Financials',
                'ordering': ['-period_end_date', 'company_name'],
            },
        ),
        migrations.CreateModel(
            name='CorporateAction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('company_name', models.CharField(db_index=True, max_length=500)),
                ('link', models.URLField(db_index=True, max_length=1000)),
                ('category', models.CharField(default='Operational', max_length=50)),
                ('action_type', models.CharField(max_length=100)),
                ('subject', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('ex_date', models.DateField(blank=True, db_index=True, null=True)),
                ('record_date', models.DateField(blank=True, null=True)),
                ('details', models.JSONField(blank=True, null=True)),
                ('scraped_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Corporate Action',
                'verbose_name_plural': 'Corporate Actions',
                'ordering': ['-scraped_at'],
                'unique_together': {('link', 'subject')},
            },
        ),
        migrations.CreateModel(
            name='StockInFocus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('stock_name', models.CharField(db_index=True, max_length=500)),
                ('text', models.TextField()),
                ('sentiment', models.CharField(default='Neutral', max_length=10)),
                ('confidence', models.FloatField(default=0.0)),
                ('action', models.CharField(default='Hold', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocks_in_focus', to='dashboard.newsarticle')),
            ],
            options={
                'verbose_name_plural': 'Stocks in Focus',
                'ordering': ['-updated_at'],
            },
        ),
    ]
